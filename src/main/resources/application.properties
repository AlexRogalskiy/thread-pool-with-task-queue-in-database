# ===================================================================
# COMMON SPRING BOOT PROPERTIES
#
# This sample file is provided as a guideline. 
#
# This content is released under the MIT License (MIT)
#
# Copyright (c) 2018, canchito-dev
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
# 
# @author 		José Carlos Mendoza Prego
# @copyright	Copyright (c) 2018, canchito-dev (http://www.canchito-dev.com)
# @license		http://opensource.org/licenses/MIT	MIT License
# @link			https://github.com/canchito-dev/thread-pool-with-task-queue-in-database
# ===================================================================

# ----------------------------------------
# BANNER
# banner.charset 		= Banner file encoding.
# banner.location 		= Banner file location.
# banner.image.location	= Banner image file location (jpg/png can also be used).
# banner.image.width	= Width of the banner image in chars (default 76)
# banner.image.height	= Height of the banner image in chars (default based on image height)
# banner.image.margin	= Left hand image margin in chars (default 2)
# banner.image.invert	= If images should be inverted for dark terminal themes (default false)
# ----------------------------------------
banner.charset=UTF-8
banner.location=classpath:banner.txt

# ----------------------------------------
# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
# Source: http://stackoverflow.com/questions/30451470/connection-to-db-dies-after-424-in-spring-boot-jpa-hibernate
# Validate the connection before borrowing it from the pool.
# spring.datasource.continue-on-error	= Do not stop if an error occurs while initializing the database.
# spring.datasource.driver-class-name	= Fully qualified name of the JDBC driver. Auto-detected based on the URL by default.
# spring.datasource.password			= Login password of the database.
# spring.datasource.url					= JDBC url of the database.
# spring.datasource.username			= Login username of the database.
# cwm.datasource.*						= Datasource specific settings
# ----------------------------------------
spring.datasource.continue-on-error=false
spring.datasource.url=jdbc:mysql://localhost:3306/flowable?autoReconnect=true
spring.datasource.username=canchitodev
spring.datasource.password=GCE-canchitodev-PWD
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
cwm.datasource.test-on-borrow=true
cwm.datasource.test-on-return=true
cwm.datasource.test-while-idle=true
cwm.datasource.validation-query=SELECT 1
cwm.datasource.validation-interval=30000
cwm.datasource.connection-timeout=60000
cwm.datasource.connection-test-query=SELECT 1
cwm.datasource.log-validation-errors=true
cwm.datasource.max-idle=1
cwm.datasource.min-idle=1
cwm.datasource.max-active=5
cwm.datasource.initial-size=5
cwm.datasource.time-between-eviction-runs-millis=5000
cwm.datasource.min-evictable-idle-time-millis=30000

# ----------------------------------------
# server.tenant-Id	= The id of tenant for which the service executes tasks
# ----------------------------------------
server.tenant-Id=canchito-dev.com

# ----------------------------------------
# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
# spring.jpa.show-sql										= Enable logging of SQL statements.
# spring.jpa.database-platform								= Name of the target database to operate on, auto-detected by default. Can be alternatively set using the "Database" enum.
# spring.jpa.properties.*									= Additional native properties to set on the JPA provider.
# spring.jpa.properties.hibernate.jdbc.batch_size			= Controls the maximum number of statements Hibernate will batch together before asking the driver to execute the batch. Zero or a negative 
#															  number disables this feature.
# spring.jpa.properties.hibernate.order_inserts				= Forces Hibernate to order inserts to allow for more batching to be used. Comes with a performance hit, so benchmark before and after to 
#															  see if this actually helps or hurts your application
# spring.jpa.properties.hibernate.order_updates				= Forces Hibernate to order SQL updates by the entity type and the primary key value of the items being updated. This allows for more batching 
#															  to be used. It will also result in fewer transaction deadlocks in highly concurrent systems. Comes with a performance hit, so benchmark 
#															  before and after to see if this actually helps or hurts your application.
# spring.jpa.properties.hibernate.jdbc.batch_versioned_data	= Some JDBC drivers return incorrect row counts when a batch is executed. If your JDBC driver falls into this category this setting should 
#															  be set to false. Otherwise, it is safe to enable this which will allow Hibernate to still batch the DML for versioned entities and still 
#															  use the returned row counts for optimistic lock checks. Since 5.0, it defaults to true. Previously (versions 3.x and 4.x), it used to be false.
# ----------------------------------------
spring.jpa.show-sql=false
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true